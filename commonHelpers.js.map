{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet toastBox = document.getElementById(\"toastBox\");\nlet userSelectedDate;\nconst startButton = document.querySelector('button[data-start]');\nlet intervalId;\n\nstartButton.disabled = true;\nstartButton.addEventListener(\"click\", handleClick);\n\nfunction handleClick() {\n  startButton.disabled = true;\n  const dateString = document.getElementById(\"datetime-picker\").value;\n  const  userSelectedDate = new Date(dateString);\n  const currentTime = Date.now();\n \n     intervalId = setInterval(() => {\n          const currentTime = Date.now();\n          const deltaTime = userSelectedDate - currentTime;\n         if(deltaTime <= 0){\n          clearInterval(intervalId);\n          updateClockface({ days: 0, hours: 0, minutes: 0, seconds: 0});\n          \n         }else{\n          const time = convertMs(deltaTime);\n          updateClockface(time);\n         }\n      }, 1000);\n\n};\n\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n\n  const daysElement = document.querySelector(`[data-days]`); \n  const hoursElement = document.querySelector(`[data-hours]`); \n  const minsElement = document.querySelector(`[data-minutes]`); \n  const secondsElement = document.querySelector(`[data-seconds]`); \n  daysElement.innerHTML = `${days}`.padStart(2, \"0\");\n  hoursElement.innerHTML = `${hours}`.padStart(2, \"0\");\n  minsElement.innerHTML = `${minutes}`.padStart(2, \"0\");\n  secondsElement.innerHTML = `${seconds}`.padStart(2, \"0\");\n};\n\n\n\nflatpickr(`input#datetime-picker`,{\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = new Date(selectedDates[0]);\n    if (userSelectedDate < new Date()){\n      showToast();\n      startButton.disabled = true;\n    }else{\n      startButton.disabled = false;\n    }\n    }\n});\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\nfunction showToast() {\n  let toastT = document.createElement(`div`);\n  const messageText = `<i class=\"fas fa-times-circle\"></i> Please chose a date in the future`;\n  toastT.classList.add(`toastT`);  \n  toastT.innerHTML = messageText;\n\n  toastBox.appendChild(toastT);\n  startButton.disabled = true;\n \n  setTimeout(() => {\n      toastT.remove();\n  }, 2000);\n  \n};\n\n\n\n// function showToast(){\n//   iziToast.error({\n//     title: \"Invalid Date\",\n//     message: \"Please choose a date in the future.\",\n//     position: \"topCenter\",\n//     timeout: 3000\n//   });\n// };\n\n// function handleClick(){\n// startButton.disabled = true;\n// const userSelectedDate = flatpickrInstance.selectedDates[0];\n// const startTime = Date.now();\n//   intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const deltaTime = userSelectedDate.getTime() - currentTime;\n//      if(deltaTime <= 0){\n//       clearInterval(intervalId);\n//       updateClockface({ days: 0, hours: 0, minutes: 0, seconds: 0});\n      \n//      }else{\n//       const time = convertMs(deltaTime);\n//       updateClockface(time);\n//      }\n//   }, 1000);\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n  "],"names":["toastBox","userSelectedDate","startButton","intervalId","handleClick","dateString","currentTime","deltaTime","updateClockface","time","convertMs","days","hours","minutes","seconds","daysElement","hoursElement","minsElement","secondsElement","flatpickr","selectedDates","showToast","ms","toastT","messageText"],"mappings":"+EASA,IAAIA,EAAW,SAAS,eAAe,UAAU,EAC7CC,EACJ,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EAC/D,IAAIC,EAEJD,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASE,CAAW,EAEjD,SAASA,GAAc,CACrBF,EAAY,SAAW,GACvB,MAAMG,EAAa,SAAS,eAAe,iBAAiB,EAAE,MACvDJ,EAAmB,IAAI,KAAKI,CAAU,EAG1CF,EAAa,YAAY,IAAM,CAC1B,MAAMG,EAAc,KAAK,MACnBC,EAAYN,EAAmBK,EACtC,GAAGC,GAAa,EACf,cAAcJ,CAAU,EACxBK,EAAgB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAC,MAExD,CACJ,MAAMC,EAAOC,EAAUH,CAAS,EAChCC,EAAgBC,CAAI,CACpB,CACH,EAAE,GAAI,CAEb,CAGA,SAASD,EAAgB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAE1D,MAAMC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAiB,SAAS,cAAc,gBAAgB,EAC9DH,EAAY,UAAY,GAAGJ,CAAI,GAAG,SAAS,EAAG,GAAG,EACjDK,EAAa,UAAY,GAAGJ,CAAK,GAAG,SAAS,EAAG,GAAG,EACnDK,EAAY,UAAY,GAAGJ,CAAO,GAAG,SAAS,EAAG,GAAG,EACpDK,EAAe,UAAY,GAAGJ,CAAO,GAAG,SAAS,EAAG,GAAG,CACzD,CAIAK,EAAU,wBAAwB,CAChC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBnB,EAAmB,IAAI,KAAKmB,EAAc,CAAC,CAAC,EACxCnB,EAAmB,IAAI,MACzBoB,IACAnB,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAExB,CACL,CAAC,EAID,SAASQ,EAAUY,EAAI,CAQrB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAE1BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EAEpCT,EAAU,KAAK,MAAQS,EAAK,MAAO,KAAQ,GAAM,EAEjDR,EAAU,KAAK,MAASQ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAKA,SAASO,GAAY,CACnB,IAAIE,EAAS,SAAS,cAAc,KAAK,EACzC,MAAMC,EAAc,wEACpBD,EAAO,UAAU,IAAI,QAAQ,EAC7BA,EAAO,UAAYC,EAEnBxB,EAAS,YAAYuB,CAAM,EAC3BrB,EAAY,SAAW,GAEvB,WAAW,IAAM,CACbqB,EAAO,OAAM,CAChB,EAAE,GAAI,CAET"}